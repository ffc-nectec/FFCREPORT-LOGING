{"version":3,"sources":["pages/dashboard/symptom/index.js"],"names":["myIcon","L","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","redIcon","violetIcon","Symptom","connect","_ref","settings","props","_this","Object","_home_runner_work_FFCREPORT_LOGING_FFCREPORT_LOGING_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_12__","this","_super","call","toggleSettings","_this$props","dispatch","type","payload","setting","value","isSidebarOpen","setStore","d","localStorage","setItem","JSON","stringify","showDrawer","item","data","sessionStorage","getItem","dataJson","parse","id","user","orgId","houseid","properties","setState","visible","selectedVillage","isLoaded","error","UserDatamap","token","then","result","house","houseMap","houseaddress","features","onClose","checkIdItems","e","target","clickTag","submit","zoomLevel","setCenterMap","newlat","newlng","_this$state","state","lat","lng","geojson","baseMaps","name","url","attribution","checked","_this2","CreatData","items","MapData","ansX","bbox","ansY","react__WEBPACK_IMPORTED_MODULE_16___default","a","createElement","react_leaflet__WEBPACK_IMPORTED_MODULE_22__","position","map","_ref2","layer","format","_ref2$checked","BaseLayer","key","react_leaflet__WEBPACK_IMPORTED_MODULE_23__","layers","transparent","react_leaflet__WEBPACK_IMPORTED_MODULE_24__","_this3","_this$state2","monentFun","moment","titleno","it","no","titlevillageName","villageName","refreshPage","window","location","reload","console","log","Complete","antd_es_auto_complete__WEBPACK_IMPORTED_MODULE_7__","style","width","Color","onSelect","val","dataSource","object","defaultValue","placeholder","filterOption","inputValue","option","children","toUpperCase","indexOf","antd_es_input__WEBPACK_IMPORTED_MODULE_9__","suffix","antd_es_icon__WEBPACK_IMPORTED_MODULE_11__","onClick","className","allowClear","message","react_helmet__WEBPACK_IMPORTED_MODULE_19__","title","antd_es_radio__WEBPACK_IMPORTED_MODULE_5__","Group","onChange","react_leaflet__WEBPACK_IMPORTED_MODULE_25__","height","center","zoom","react_leaflet_fullscreen__WEBPACK_IMPORTED_MODULE_29___default","renderBaseLayerControl","markerIcon1","geometry","coordinates","tags","find","obj","react_leaflet__WEBPACK_IMPORTED_MODULE_26__","onMouseOver","openPopup","onMouseOut","closePopup","icon","react_leaflet__WEBPACK_IMPORTED_MODULE_27__","antd_es_drawer__WEBPACK_IMPORTED_MODULE_1__","concat","placement","getContainer","overflow","aa123","apex","diff","birthDate","antd_es_button__WEBPACK_IMPORTED_MODULE_3__","firstname","lastname","react_router_dom__WEBPACK_IMPORTED_MODULE_18__","to","components_layout_Footer__WEBPACK_IMPORTED_MODULE_21__","React","Component"],"mappings":"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","file":"static/js/15.9a79127d.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport moment from 'moment'\nimport Footer from 'components/layout/Footer'\nimport { Radio, AutoComplete, Input, Icon, Drawer, Button } from 'antd'\nimport { Map, TileLayer, Marker, WMSTileLayer, LayersControl, Popup } from 'react-leaflet'\nimport L from 'leaflet'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport {\n  MapData,\n  CreatData,\n  UserDatamap,\n  houseMap,\n} from '../../../components/system/Auth/Login/PostData'\n// import 'react-leaflet-fullscreen-control'\n// import data1 from './data1'\n\nconst myIcon = new L.Icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [0, 0],\n  iconAnchor: [0, 0],\n  popupAnchor: [0, 0],\n  shadowSize: [0, 0],\n})\n\nconst redIcon = new L.Icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [20, 30],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n})\n\nconst violetIcon = new L.Icon({\n  iconUrl:\n    'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-violet.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [20, 30],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n})\n\nconst mapStateToProps = ({ settings }) => ({ settings })\n@connect(mapStateToProps)\nclass Symptom extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      geojson: [],\n      house: [],\n      // person: [],\n      houseaddress: [],\n      lat: '',\n      lng: '',\n      // lat: 13.520531624809204,\n      // lng: 100.00699460506439,\n      submit: '',\n      clickTag: '',\n      visible: false,\n      selectedVillage: null,\n      isLoaded: false,\n      error: null,\n      zoomLevel: 14,\n    }\n    this.baseMaps = [\n      {\n        name: 'Google Satellite',\n        url: 'https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',\n        attribution: '&copy; Google',\n        type: 'tile',\n        checked: true,\n      },\n      {\n        name: 'OpenStreet Map',\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        attribution:\n          '&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors',\n        type: 'tile',\n      },\n    ]\n  }\n\n  componentDidMount() {\n    const data = sessionStorage.getItem('userData')\n    const dataJson = JSON.parse(data)\n    const id = dataJson.user.orgId\n    // eslint-disable-next-line react/destructuring-assignment\n\n    CreatData(id, dataJson.token).then(\n      result => {\n        this.setState({\n          items: result,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n\n    MapData(id, dataJson.token).then(\n      result => {\n        const ansX = (result.bbox[2] + result.bbox[0]) / 2\n        const ansY = (result.bbox[3] + result.bbox[1]) / 2\n        this.setState({\n          geojson: result.features,\n          isLoaded: true,\n          lat: ansY,\n          lng: ansX,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n  }\n\n  toggleSettings = () => {\n    const { dispatch, settings } = this.props\n    const { isSidebarOpen } = settings\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isSidebarOpen',\n        value: !isSidebarOpen,\n      },\n    })\n  }\n\n  setStore = d => {\n    // console.log('setstore')\n    // console.log(d, 'llll')\n    localStorage.setItem('userUnit', JSON.stringify(d))\n  }\n\n  showDrawer = item => {\n    const data = sessionStorage.getItem('userData')\n    const dataJson = JSON.parse(data)\n    const id = dataJson.user.orgId\n    const houseid = item.properties.id\n    this.setState(\n      {\n        visible: true,\n        selectedVillage: item.properties.id,\n        isLoaded: true,\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n\n    UserDatamap(id, dataJson.token, houseid).then(\n      result => {\n        this.setState({\n          house: result,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n\n    houseMap(id, dataJson.token, houseid).then(\n      result => {\n        // console.log(result, 'address')\n        this.setState({\n          houseaddress: result.features,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n  }\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n      selectedVillage: null,\n    })\n  }\n\n  checkIdItems = e => {\n    if (e.target.value === 1) {\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({ clickTag: 'chronic', submit: '', zoomLevel: 14 })\n    } else if (e.target.value === 2) {\n      // eslint-disable-next-line react/no-unused-state\n      this.setState({ clickTag: 'disable', submit: '', zoomLevel: 14 })\n    }\n  }\n\n  setCenterMap = (newlat, newlng) => {\n    // console.log(newlat, newlng,'newnwreteuii');\n    const { lat, lng } = this.state\n    if (lat !== newlat) {\n      this.setState({\n        lat: newlat,\n        zoomLevel: 20,\n      })\n    }\n    if (lng !== newlng) {\n      this.setState({\n        lng: newlng,\n        zoomLevel: 20,\n      })\n    }\n  }\n\n  renderBaseLayerControl() {\n    return (\n      <LayersControl position=\"bottomleft\">\n        {this.baseMaps.map(({ name, url, attribution, type, layer, format, checked = false }) => {\n          return type === 'wms' ? (\n            <LayersControl.BaseLayer key={name} name={name} checked={checked}>\n              <WMSTileLayer\n                layers={layer}\n                format={format}\n                transparent={false}\n                url={url}\n                attribution={attribution}\n              />\n            </LayersControl.BaseLayer>\n          ) : (\n            <LayersControl.BaseLayer key={name} name={name} checked={checked}>\n              <TileLayer attribution={attribution} url={url} />\n            </LayersControl.BaseLayer>\n          )\n        })}\n      </LayersControl>\n    )\n  }\n\n  render() {\n    const {\n      geojson,\n      items,\n      lat,\n      lng,\n      submit,\n      isLoaded,\n      error,\n      clickTag,\n      selectedVillage,\n      // person,\n      house,\n      visible,\n      houseaddress,\n      zoomLevel,\n    } = this.state\n    // const aa12 = geojson.map(item => item.properties)\n    // const housenovillage = houseaddress.map(object => object.properties)\n    const monentFun = moment()\n    const position = [lat, lng]\n    const titleno = houseaddress.map(it => it.properties.no)\n    const titlevillageName = houseaddress.map(it => it.properties.villageName)\n    console.log(items, selectedVillage)\n    // console.log(houseaddress.map(item => item.properties.no + item.properties.villageName),housenovillage, ';l;;;kmiuygtfhgdstfygh')\n\n    function refreshPage() {\n      window.location.reload(false)\n    }\n\n    const Complete = () => {\n      return (\n        <AutoComplete\n          style={{ width: 350, Color: '#000' }}\n          onSelect={val => {\n            this.setState({ submit: val, clickTag: '', zoomLevel: 20 })\n          }}\n          dataSource={geojson.map(object => object.properties.no + object.properties.villageName)}\n          defaultValue={submit}\n          placeholder=\"บ้านเลขที่ / หมู่บ้าน\"\n          filterOption={(inputValue, option) =>\n            option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n        >\n          <Input\n            suffix={<Icon type=\"search\" onClick={refreshPage} className=\"certain-category-icon\" />}\n            allowClear\n          />\n        </AutoComplete>\n      )\n    }\n    if (error) {\n      return <div>Error: {error.message}</div>\n    }\n    if (!isLoaded) {\n      return <div>Loading...</div>\n    }\n    return (\n      <div>\n        <Helmet title=\"สุขภาวะ/อาการ\" />\n        <div className=\"air__utils__heading\">\n          <h5>สุขภาวะ/อาการ</h5>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xl-4 col-lg-12\">\n            <Radio.Group onChange={this.checkIdItems}>\n              <Radio value={1}>ผู้ป่วยเรื้อรัง</Radio>\n              <Radio value={2}>ผู้พิการ</Radio>\n            </Radio.Group>\n          </div>\n          <div className=\"col-xl-2 col-lg-12\" />\n          <div className=\"col-xl-4 col-lg-12\">\n            <Complete />\n          </div>\n        </div>\n        <br />\n        <br />\n        <Map style={{ height: '70vh' }} center={position} zoom={zoomLevel}>\n          <FullscreenControl position=\"topleft\" />\n          {this.renderBaseLayerControl()}\n          {geojson.map(item => {\n            let markerIcon1 = myIcon\n            // if (submit) {\n            // if (item.properties.no + item.properties.villageName === submit) {\n            //   markerIcon1 = redIcon\n            // }\n            if (item.properties.no + item.properties.villageName === submit) {\n              this.setCenterMap(item.geometry.coordinates[1], item.geometry.coordinates[0])\n              markerIcon1 = redIcon\n            } else if (clickTag === item.properties.tags.find(obj => obj === 'chronic')) {\n              markerIcon1 = redIcon\n            } else if (clickTag === item.properties.tags.find(obj => obj === 'disable')) {\n              markerIcon1 = violetIcon\n            }\n            return (\n              // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n              <Marker\n                onMouseOver={e => {\n                  e.target.openPopup()\n                }}\n                onMouseOut={e => {\n                  e.target.closePopup()\n                }}\n                // onClick={() => this.showDrawer(item)}\n                position={[item.geometry.coordinates[1], item.geometry.coordinates[0]]}\n                icon={markerIcon1}\n              >\n                <Popup>\n                  <span>\n                    <p>หมู่บ้าน:{item.properties.villageName}</p>\n                    <p>บ้านเลขที่:{item.properties.no}</p>\n                    <p>\n                      {item.geometry.coordinates[1]},{item.geometry.coordinates[0]}\n                    </p>\n                  </span>\n                </Popup>\n                <div className=\"site-drawer-render-in-current-wrapper\">\n                  <Drawer\n                    title={`${titleno} ${titlevillageName}`}\n                    placement=\"right\"\n                    onClose={this.onClose}\n                    visible={visible}\n                    getContainer={false}\n                    style={{ position: 'absolute', overflow: 'hidden', width: 240 }}\n                  >\n                    {house.map(d => {\n                      let aa123\n                      const apex = monentFun.diff(d.birthDate, 'years')\n                      if (apex >= 1) {\n                        aa123 = (\n                          <Button\n                            onClick={() => this.setStore(d)}\n                            style={{ width: 220, height: 50 }}\n                          >\n                            {d.firstname}&nbsp;{d.lastname}&nbsp;อายุ&nbsp;\n                            {apex}&nbsp;ปี\n                          </Button>\n                        )\n                      } else {\n                        aa123 = null\n                      }\n                      return (\n                        <div>\n                          <Link to=\"/dashboard/userdetail\">{aa123}</Link>\n                        </div>\n                      )\n                    })}\n                  </Drawer>\n                </div>\n              </Marker>\n            )\n          })}\n        </Map>\n        <br />\n        <Footer />\n      </div>\n    )\n  }\n}\nexport default Symptom\n"],"sourceRoot":""}