{"version":3,"sources":["pages/dashboard/editmark/index.js"],"names":["myIcon","L","icon","iconUrl","iconSize","iconAnchor","popupAnchor","greenIcon","Editmark","connect","_ref","settings","props","_this","Object","_home_runner_work_FFCREPORT_LOGING_FFCREPORT_LOGING_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_14__","this","_super","call","setStore","d","console","log","localStorage","setItem","JSON","stringify","onClose","setState","selectedVillage","handleVisibleChange","visible1","showDraggable","showDraggableMarker","villageDrag","villageName","noDrag","no","idhouse","editeDraggable","draggable","onDrag","event","dragMarkerLatlng","target","_latlng","onDragle","item","id","properties","geojson","state","newlat","lat","newlng","lng","geometry","coordinates","geojson_tmp","newid","edithouse","newlatlng","editnewmarker","data","sessionStorage","getItem","dataJson","parse","user","orgId","editemarkersubmit","token","then","result","updatehouse","isLoaded","error","alert","window","location","reload","submitok","houseid","editemarker","handleRemove","handleDelete","editeDraggableMarker","person","houseaddress","haveLocation","submit","baseMaps","name","url","attribution","type","checked","mapOptions","zoomControl","attributionControl","center","zoom","layers","basemaps","handleValidSubmit","bind","_home_runner_work_FFCREPORT_LOGING_FFCREPORT_LOGING_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_16__","_this2","MapData","features","haveLocat","value","find","react__WEBPACK_IMPORTED_MODULE_19___default","a","createElement","react_leaflet__WEBPACK_IMPORTED_MODULE_25__","position","map","_ref2","layer","format","_ref2$checked","BaseLayer","key","react_leaflet__WEBPACK_IMPORTED_MODULE_26__","transparent","react_leaflet__WEBPACK_IMPORTED_MODULE_27__","_this3","_this$state","onsubmit","aa12","refreshPage","Complete","antd_es_auto_complete__WEBPACK_IMPORTED_MODULE_9__","style","width","Color","onSelect","val","dataSource","object","defaultValue","placeholder","filterOption","inputValue","option","children","toUpperCase","indexOf","antd_es_input__WEBPACK_IMPORTED_MODULE_11__","suffix","antd_es_icon__WEBPACK_IMPORTED_MODULE_13__","onClick","className","allowClear","content","antd_es_form__WEBPACK_IMPORTED_MODULE_3__","layout","onChange","antd_es_row__WEBPACK_IMPORTED_MODULE_5__","gutter","antd_es_button__WEBPACK_IMPORTED_MODULE_7__","message","react_helmet__WEBPACK_IMPORTED_MODULE_21__","title","react_leaflet__WEBPACK_IMPORTED_MODULE_28__","height","react_leaflet_fullscreen__WEBPACK_IMPORTED_MODULE_24___default","renderBaseLayerControl","markerdata","markerIcon1","react_leaflet__WEBPACK_IMPORTED_MODULE_29__","marker_index","concat","onDragend","e","react_leaflet__WEBPACK_IMPORTED_MODULE_30__","zIndex","zoomIn","antd_es_popover__WEBPACK_IMPORTED_MODULE_1__","trigger","visible","onVisibleChange","overlayStyle","overflowY","marginTop","left","padding","components_layout_Footer__WEBPACK_IMPORTED_MODULE_22__","React","Component"],"mappings":"8aA4BMA,UAASC,IAAEC,KAAK,CACpBC,QAAS,iEACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,KAAM,IACnBC,YAAa,CAAC,GAAI,OAGdC,EAAYN,IAAEC,KAAK,CACvBC,QAAS,gBACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,KAAM,IACnBC,YAAa,CAAC,GAAI,MAKdE,EADLC,YADuB,SAAAC,GAAA,MAAmB,CAAEC,SAArBD,EAAGC,gEAGzB,SAAAH,EAAYI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAR,IACjBK,EAAAI,EAAAC,KAAAF,KAAMJ,IA0FRO,SAAW,SAAAC,GACTC,QAAQC,IAAI,YACZD,QAAQC,IAAIF,EAAG,QACfG,aAAaC,QAAQ,WAAYC,KAAKC,UAAUN,KA9F/BP,EAiGnBc,QAAU,WACRd,EAAKe,SAAS,CAEZC,gBAAiB,QApGFhB,EAwGnBiB,oBAAsB,SAAAC,GACpBlB,EAAKe,SAAS,CAAEG,cAzGClB,EA4GnBmB,cAAgB,SAAAZ,GACdP,EAAKe,SAAS,CACZK,qBAAqB,EACrBC,YAAad,EAAEe,YACfC,OAAQhB,EAAEiB,GACVC,QAASlB,KAjHMP,EAqHnB0B,eAAiB,SAAAnB,GACfP,EAAKe,SAAS,CACZY,WAAW,EACXN,YAAad,EAAEe,YACfC,OAAQhB,EAAEiB,GACVC,QAASlB,KA1HMP,EA8HnB4B,OAAS,SAAAC,GACP7B,EAAKe,SAAS,CAEZe,iBAAkBD,EAAME,OAAOC,WAjIhBhC,EAqInBiC,SAAW,SAACJ,EAAOK,EAAMC,GACvB3B,QAAQC,IAAIyB,EAAKE,WAAY,MADC,IAItBC,EAAYrC,EAAKsC,MAAjBD,QAEFE,EAASV,EAAME,OAAOC,QAAQQ,IAE9BC,EAASZ,EAAME,OAAOC,QAAQU,IACpCR,EAAKS,SAASC,YAAY,GAAKL,EAC/BL,EAAKS,SAASC,YAAY,GAAKH,EAE/B,IAAMI,EAAcR,EACpB7B,QAAQC,IAAIoC,EAAa,OACzBA,EAAYV,GAAIQ,SAASC,YAAY,GAAKL,EAC1CM,EAAYV,GAAIQ,SAASC,YAAY,GAAKH,EAE1CzC,EAAKe,SAAS,CACZsB,QAASQ,EACTC,MAAOZ,EAAKE,WAAWD,GACvBY,UAAWb,EAAKE,WAChBY,UAAWd,EAAKS,SAASC,cAE3BpC,QAAQC,IAAI8B,EAAQE,EAAQ,cA5JXzC,EA+JnBiD,cAAgB,SAACZ,EAASS,EAAOC,EAAWC,EAAWrB,GACrDnB,QAAQC,IAAIkB,EAAW,UAIvB,IAAMuB,EAAOC,eAAeC,QAAQ,YAC9BC,EAAWzC,KAAK0C,MAAMJ,GACtBf,EAAKkB,EAASE,KAAKC,MAkBzB,OAhBAC,YAAkBtB,EAAIkB,EAASK,MAAOZ,EAAOT,EAASU,EAAWC,GAAWW,KAC1E,SAAAC,GACE5D,EAAKe,SAAS,CACZ8C,YAAaD,EACbE,UAAU,KAGd,SAAAC,GACE/D,EAAKe,SAAS,CACZ+C,UAAU,EACVC,YAKNC,MAAM,0GACCC,OAAOC,SAASC,UAxLNnE,EA2LnBoE,SAAW,SAAC3C,EAASK,GACnB,IAAMoB,EAAOC,eAAeC,QAAQ,YAC9BC,EAAWzC,KAAK0C,MAAMJ,GACtBf,EAAKkB,EAASE,KAAKC,MACnBa,EAAU5C,EAAQU,GAiBxB,OAhBAmC,YAAYnC,EAAIkB,EAASK,MAAOW,EAAS5C,EAASK,GAAkB6B,KAClE,SAAAC,GACE5D,EAAKe,SAAS,CACZ8C,YAAaD,EACbE,UAAU,KAGd,SAAAC,GACE/D,EAAKe,SAAS,CACZ+C,UAAU,EACVC,YAKNC,MAAM,MACCC,OAAOC,SAASC,UAhNNnE,EAmNnBuE,aAAe,WACbvE,EAAKe,SAAS,CACZK,oBAAqB,QArNNpB,EAyNnBwE,aAAe,WACbxE,EAAKe,SAAS,CACZ0D,sBAAsB,KAzNxBzE,EAAKsC,MAAQ,CACXD,QAAS,GAETqC,OAAQ,GACRC,aAAc,GACdC,aAAc,GACdpC,IAAK,mBACLE,IAAK,mBACLmC,OAAQ,GAER3D,UAAU,EACVF,gBAAiB,KACjB8C,UAAU,EACVC,MAAO,KACP3C,qBAAqB,EACrBqD,sBAAsB,EACtBpD,YAAa,KACbE,OAAQ,KACRE,QAAS,GACToC,YAAa,GACb/B,iBAAkB,CAAC,MAAO,KAC1BH,WAAW,EACXmB,MAAO,GACPC,UAAW,GACXC,UAAW,IAGbhD,EAAK8E,SAAW,CACd,CACEC,KAAM,kBACNC,IAAK,qDACLC,YAAa,gBACbC,KAAM,OACNC,SAAS,GAEX,CACEJ,KAAM,gBACNC,IAAK,qDACLC,YACE,wFACFC,KAAM,SAGVlF,EAAKoF,WAAa,CAChBC,aAAa,EACbC,oBAAoB,EACpBC,OAAQ,EAAE,iBAAkB,oBAC5BC,KAAM,GACNC,OAAQ,CAACzF,EAAK0F,WAEhB1F,EAAK2F,kBAAoB3F,EAAK2F,kBAAkBC,KAAvB3F,OAAA4F,EAAA,EAAA5F,CAAAD,IApDRA,kEAuDC,IAAA8F,EAAA3F,KACZ+C,EAAOC,eAAeC,QAAQ,YAC9BC,EAAWzC,KAAK0C,MAAMJ,GACtBf,EAAKkB,EAASE,KAAKC,MAEzBuC,YAAQ5D,EAAIkB,EAASK,OAAOC,KAC1B,SAAAC,GACEkC,EAAK/E,SAAS,CACZsB,QAASuB,EAAOoC,SAChBlC,UAAU,KAGd,SAAAC,GACE+B,EAAK/E,SAAS,CACZ+C,UAAU,EACVC,YAKNkC,YAAU9D,EAAIkB,EAASK,OAAOC,KAC5B,SAAAC,GACEkC,EAAK/E,SAAS,CACZ6D,aAAchB,EACdE,UAAU,KAGd,SAAAC,GACE+B,EAAK/E,SAAS,CACZ+C,UAAU,EACVC,sDA0IUmC,GAChB1F,QAAQC,IAAIyF,EAAO,WACnB1F,QAAQC,IAAIyF,EAAO,UAFI,IAGftB,EAAiBzE,KAAKmC,MAAtBsC,aACRpE,QAAQC,IAAImE,EAAc,gBAC1BA,EAAauB,KAAK,SAAAjE,GAChB,OAAOA,EAAKV,GAAKU,EAAKZ,cAAgB4E,qDAKxC,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,SAAS,cACrBrG,KAAK2E,SAAS2B,IAAI,SAAAC,GAAsE,IAAnE3B,EAAmE2B,EAAnE3B,KAAMC,EAA6D0B,EAA7D1B,IAAKC,EAAwDyB,EAAxDzB,YAAaC,EAA2CwB,EAA3CxB,KAAMyB,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,OAA8BC,EAAAH,EAAtBvB,eAAsB,IAAA0B,KACvF,MAAgB,QAAT3B,EACLkB,EAAAC,EAAAC,cAACC,EAAA,EAAcO,UAAf,CAAyBC,IAAKhC,EAAMA,KAAMA,EAAMI,QAASA,GACvDiB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CACEvB,OAAQkB,EACRC,OAAQA,EACRK,aAAa,EACbjC,IAAKA,EACLC,YAAaA,KAIjBmB,EAAAC,EAAAC,cAACC,EAAA,EAAcO,UAAf,CAAyBC,IAAKhC,EAAMA,KAAMA,EAAMI,QAASA,GACvDiB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAWjC,YAAaA,EAAaD,IAAKA,yCAQ7C,IAAAmC,EAAAhH,KAAAiH,EA0BHjH,KAAKmC,MAxBPD,EAFK+E,EAEL/E,QACAG,EAHK4E,EAGL5E,IACAE,EAJK0E,EAIL1E,IACAmC,EALKuC,EAKLvC,OACAf,EANKsD,EAMLtD,SACAC,EAPKqD,EAOLrD,MACA/C,EARKoG,EAQLpG,gBACA0D,EATK0C,EASL1C,OAGAxD,EAZKkG,EAYLlG,SACAyD,EAbKyC,EAaLzC,aACAC,EAdKwC,EAcLxC,aACAxD,EAfKgG,EAeLhG,oBACAqD,EAhBK2C,EAgBL3C,qBACApD,EAjBK+F,EAiBL/F,YACAE,EAlBK6F,EAkBL7F,OACAE,EAnBK2F,EAmBL3F,QACAoC,EApBKuD,EAoBLvD,YACA/B,EArBKsF,EAqBLtF,iBACAH,EAtBKyF,EAsBLzF,UACAmB,EAvBKsE,EAuBLtE,MACAC,EAxBKqE,EAwBLrE,UACAC,EAzBKoE,EAyBLpE,UAEIqE,EAAWlH,KAAKwF,kBAEtBnF,QAAQC,IAAIoD,EAAa,YACzB,IAAMyD,EAAOjF,EAAQoE,IAAI,SAAAvE,GAAI,OAAIA,EAAKE,aAEhCoE,EAAW,CAAChE,EAAKE,GAKvB,SAAS6E,IACPtD,OAAOC,SAASC,SALlB3D,QAAQC,IAAI4B,EAAS,eACrB7B,QAAQC,IAAIO,EAAiB0D,GAC7BlE,QAAQC,IAAIkE,EAAcF,EAAsB,WAMhD,IAAM+C,EAAW,WACf,OACEpB,EAAAC,EAAAC,cAAAmB,EAAA,GACEC,MAAO,CAAEC,MAAO,IAAKC,MAAO,QAC5BC,SAAU,SAAAC,GACRX,EAAKpG,SAAS,CAAE8D,OAAQiD,KAE1BC,WAAYT,EAAKb,IAAI,SAAAuB,GAAM,OAAIA,EAAOxG,GAAKwG,EAAO1G,cAClD2G,aAAcpD,EACdqD,YAAY,kHACZC,aAAc,SAACC,EAAYC,GAAb,OAC+D,IAA3EA,EAAOtI,MAAMuI,SAASC,cAAcC,QAAQJ,EAAWG,iBAGzDnC,EAAAC,EAAAC,cAAAmC,EAAA,GACEC,OAAQtC,EAAAC,EAAAC,cAAAqC,EAAA,GAAMzD,KAAK,SAAS0D,QAASrB,EAAasB,UAAU,0BAC5DC,YAAU,MA0BZC,EAAUnE,EAAa6B,IAAI,SAAAlG,GAC/B,OACE6F,EAAAC,EAAAC,cAAA0C,EAAA,GAAMC,OAAO,WAAWC,SAAU7B,GAChCjB,EAAAC,EAAAC,cAAA6C,EAAA,GAAKC,OAAQ,IACXhD,EAAAC,EAAAC,cAAA+C,EAAA,GACE3B,MAAO,CAAEC,MAAO,KAChBiB,QAAS,kBAAMzB,EAAKhG,cAAcZ,IAClC2I,SAAU7B,GAET9G,EAAEiB,GALL,OAKejB,EAAEe,iBAMzB,OAAIyC,EACKqC,EAAAC,EAAAC,cAAA,qBAAavC,EAAMuF,SAEvBxF,EAIHsC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiD,EAAA,OAAD,CAAQC,MAAM,sBACdpD,EAAAC,EAAAC,cAAA,OAAKuC,UAAU,uBACbzC,EAAAC,EAAAC,cAAA,6CAEFF,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAK/B,MAAO,CAAEgC,OAAQ,QAAUnE,OAAQiB,EAAUhB,KAAM,IACtDY,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAmBG,SAAS,YAC3BrG,KAAKyJ,yBACLnF,GACCpC,EAAQoE,IAAI,SAACvE,EAAMC,GACjB,IAAM0H,EAAa,CAAC3H,EAAKS,SAASC,YAAY,GAAIV,EAAKS,SAASC,YAAY,IACxEkH,EAAc3K,EAMlB,OALI0F,GACE3C,EAAKE,WAAWZ,GAAKU,EAAKE,WAAWd,cAAgBuD,IACvDiF,EAAcpK,GAIhB0G,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEhD,IAAI,mBACJiD,aAAY,oBAAAC,OAAsB9H,GAClCR,UAAWA,EACXuI,UAAW,SAAAC,GAAC,OAAIhD,EAAKlF,SAASkI,EAAGjI,EAAMC,IAEvCqE,SAAUqD,EACVxK,KAAMyK,GAEN1D,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,6DAAapE,EAAKE,WAAWd,aAC7B8E,EAAAC,EAAAC,cAAA,yEAAepE,EAAKE,WAAWZ,IAC/B4E,EAAAC,EAAAC,cAAA,SACGpE,EAAKS,SAASC,YAAY,GAD7B,IACkCV,EAAKS,SAASC,YAAY,MAG/C,IAAdjB,GACCyE,EAAAC,EAAAC,cAAA6C,EAAA,OACE/C,EAAAC,EAAAC,cAAA+C,EAAA,GACET,QAAS,kBACPzB,EAAKlE,cAAcH,EAAOT,EAASU,EAAWC,EAAWrB,KAF7D,wCADF,OASEyE,EAAAC,EAAAC,cAAA+C,EAAA,GAAQT,QAASzB,EAAK3C,cAAtB,6CAObpD,GACCgF,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CACEhD,IAAI,mBACJiD,aAAa,mBACbtC,MAAO,CAAElB,SAAU,WAAY6D,OAAQ,KACvC7D,SAAU1E,EACVH,WAAS,EACTuI,UAAW/J,KAAKyB,OAChBvC,KAAMK,EACNwJ,SAAU/I,KAAKmK,QAEflE,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,KACEhE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,6DAAajF,GACb+E,EAAAC,EAAAC,cAAA,yEAAe/E,IAEjB6E,EAAAC,EAAAC,cAAA6C,EAAA,OACE/C,EAAAC,EAAAC,cAAA+C,EAAA,GAAQT,QAAS,kBAAMzB,EAAK/C,SAAS3C,EAASK,KAA9C,wCADF,OAGEsE,EAAAC,EAAAC,cAAA+C,EAAA,GAAQT,QAASzI,KAAKoE,cAAtB,2CAKR6B,EAAAC,EAAAC,cAAAiE,EAAA,GAEEC,QAAQ,QACRC,QAASvJ,EACTwJ,gBAAiBvK,KAAKc,oBACtB0J,aAAc,CACZjB,OAAQ,OACRkB,UAAW,QAEb7B,QAASA,GAET3C,EAAAC,EAAAC,cAAA+C,EAAA,GACE3B,MAAO,CACLlB,SAAU,WACVqE,UAAW,IACXC,KAAM,GACNC,QAAS,GACTpD,MAAO,GACP0C,OAAQ,MAGVjE,EAAAC,EAAAC,cAAA,KAAGuC,UAAU,gBAGjBzC,EAAAC,EAAAC,cAAA+C,EAAA,GACE3B,MAAO,CACLlB,SAAU,WACVqE,UAAW,IACXC,KAAM,GACNC,QAAS,GACTpD,MAAO,GACP0C,OAAQ,KAEVzB,QAASzI,KAAKuB,gBAEd0E,EAAAC,EAAAC,cAAA,KAAGuC,UAAU,mBAiHjBzC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0E,EAAA,EAAD,OAvOK5E,EAAAC,EAAAC,cAAA,gCAxWU2E,IAAMC,eAolBdvL","file":"static/js/11.c77bf851.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n// import { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport Footer from 'components/layout/Footer'\nimport { AutoComplete, Input, Icon, Row, Button, Form, Popover } from 'antd'\nimport L from 'leaflet'\nimport FullscreenControl from 'react-leaflet-fullscreen'\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  WMSTileLayer,\n  LayersControl,\n  Popup,\n  // FeatureGroup,\n} from 'react-leaflet'\nimport {\n  MapData,\n  // UserDatamap,\n  // houseMap,\n  haveLocat,\n  editemarker,\n  editemarkersubmit,\n} from '../../../components/system/Auth/Login/PostData'\n// import data1 from './data1'\nimport 'leaflet-draw/dist/leaflet.draw.css'\n\nconst myIcon = L.icon({\n  iconUrl: 'https://unpkg.com/leaflet@1.0.1/dist/images/marker-icon-2x.png',\n  iconSize: [25, 40],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n})\n\nconst greenIcon = L.icon({\n  iconUrl: 'icongreen.png',\n  iconSize: [35, 40],\n  iconAnchor: [12.5, 41],\n  popupAnchor: [0, -41],\n})\n\nconst mapStateToProps = ({ settings }) => ({ settings })\n@connect(mapStateToProps)\nclass Editmark extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      geojson: [],\n      // house: [],\n      person: [],\n      houseaddress: [],\n      haveLocation: [],\n      lat: 13.520531624809204,\n      lng: 100.00699460506439,\n      submit: '',\n      // visible: false,\n      visible1: false,\n      selectedVillage: null,\n      isLoaded: false,\n      error: null,\n      showDraggableMarker: false,\n      editeDraggableMarker: true,\n      villageDrag: null,\n      noDrag: null,\n      idhouse: [],\n      updatehouse: [],\n      dragMarkerLatlng: [13.52, 100],\n      draggable: false,\n      newid: '',\n      edithouse: [],\n      newlatlng: [],\n      // markerdata: false\n    }\n    this.baseMaps = [\n      {\n        name: 'GoogleSatellite',\n        url: 'https://mt1.google.com/vt/lyrs=s&x={x}&y={y}&z={z}',\n        attribution: '&copy; Google',\n        type: 'tile',\n        checked: true,\n      },\n      {\n        name: 'OpenStreetMap',\n        url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        attribution:\n          '&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors',\n        type: 'tile',\n      },\n    ]\n    this.mapOptions = {\n      zoomControl: false,\n      attributionControl: false,\n      center: [-29.0529434318608, 152.01910972595218],\n      zoom: 10,\n      layers: [this.basemaps],\n    }\n    this.handleValidSubmit = this.handleValidSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    const data = sessionStorage.getItem('userData')\n    const dataJson = JSON.parse(data)\n    const id = dataJson.user.orgId\n\n    MapData(id, dataJson.token).then(\n      result => {\n        this.setState({\n          geojson: result.features,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n\n    haveLocat(id, dataJson.token).then(\n      result => {\n        this.setState({\n          haveLocation: result,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n  }\n\n  setStore = d => {\n    console.log('setstore')\n    console.log(d, 'llll')\n    localStorage.setItem('userUnit', JSON.stringify(d))\n  }\n\n  onClose = () => {\n    this.setState({\n      // visible: false,\n      selectedVillage: null,\n    })\n  }\n\n  handleVisibleChange = visible1 => {\n    this.setState({ visible1 })\n  }\n\n  showDraggable = d => {\n    this.setState({\n      showDraggableMarker: true,\n      villageDrag: d.villageName,\n      noDrag: d.no,\n      idhouse: d,\n    })\n  }\n\n  editeDraggable = d => {\n    this.setState({\n      draggable: true,\n      villageDrag: d.villageName,\n      noDrag: d.no,\n      idhouse: d,\n    })\n  }\n\n  onDrag = event => {\n    this.setState({\n      // eslint-disable-next-line no-underscore-dangle\n      dragMarkerLatlng: event.target._latlng,\n    })\n  }\n\n  onDragle = (event, item, id) => {\n    console.log(item.properties, 'id')\n    // console.log(item,'test');\n    // eslint-disable-next-line react/no-access-state-in-setstate\n    const { geojson } = this.state\n    // eslint-disable-next-line no-underscore-dangle\n    const newlat = event.target._latlng.lat\n    // eslint-disable-next-line no-underscore-dangle\n    const newlng = event.target._latlng.lng\n    item.geometry.coordinates[1] = newlat\n    item.geometry.coordinates[0] = newlng\n    // eslint-disable-next-line camelcase\n    const geojson_tmp = geojson\n    console.log(geojson_tmp, 'tmp')\n    geojson_tmp[id].geometry.coordinates[1] = newlat\n    geojson_tmp[id].geometry.coordinates[0] = newlng\n\n    this.setState({\n      geojson: geojson_tmp,\n      newid: item.properties.id,\n      edithouse: item.properties,\n      newlatlng: item.geometry.coordinates,\n    })\n    console.log(newlat, newlng, 'newlatlng')\n  }\n\n  editnewmarker = (geojson, newid, edithouse, newlatlng, draggable) => {\n    console.log(draggable, 'grable')\n    // console.log(edithouse,'popoties');\n    // console.log(newid,'id');\n    // console.log(geojson,'geojson')\n    const data = sessionStorage.getItem('userData')\n    const dataJson = JSON.parse(data)\n    const id = dataJson.user.orgId\n    // const houseid = idhouse.id\n    editemarkersubmit(id, dataJson.token, newid, geojson, edithouse, newlatlng).then(\n      result => {\n        this.setState({\n          updatehouse: result,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n    // eslint-disable-next-line no-alert\n    alert('ต้องการแก้ไขพิกัด')\n    return window.location.reload()\n  }\n\n  submitok = (idhouse, dragMarkerLatlng) => {\n    const data = sessionStorage.getItem('userData')\n    const dataJson = JSON.parse(data)\n    const id = dataJson.user.orgId\n    const houseid = idhouse.id\n    editemarker(id, dataJson.token, houseid, idhouse, dragMarkerLatlng).then(\n      result => {\n        this.setState({\n          updatehouse: result,\n          isLoaded: true,\n        })\n      },\n      error => {\n        this.setState({\n          isLoaded: true,\n          error,\n        })\n      },\n    )\n    // eslint-disable-next-line no-alert\n    alert('ok')\n    return window.location.reload()\n  }\n\n  handleRemove = () => {\n    this.setState({\n      showDraggableMarker: null,\n    })\n  }\n\n  handleDelete = () => {\n    this.setState({\n      editeDraggableMarker: true,\n    })\n  }\n\n  handleValidSubmit(value) {\n    console.log(value, 'dr.pong')\n    console.log(value, 'values')\n    const { haveLocation } = this.state\n    console.log(haveLocation, 'lololocation')\n    haveLocation.find(item => {\n      return item.no + item.villageName === value\n    })\n  }\n\n  renderBaseLayerControl() {\n    return (\n      <LayersControl position=\"bottomleft\">\n        {this.baseMaps.map(({ name, url, attribution, type, layer, format, checked = false }) => {\n          return type === 'wms' ? (\n            <LayersControl.BaseLayer key={name} name={name} checked={checked}>\n              <WMSTileLayer\n                layers={layer}\n                format={format}\n                transparent={false}\n                url={url}\n                attribution={attribution}\n              />\n            </LayersControl.BaseLayer>\n          ) : (\n            <LayersControl.BaseLayer key={name} name={name} checked={checked}>\n              <TileLayer attribution={attribution} url={url} />\n            </LayersControl.BaseLayer>\n          )\n        })}\n      </LayersControl>\n    )\n  }\n\n  render() {\n    const {\n      geojson,\n      lat,\n      lng,\n      submit,\n      isLoaded,\n      error,\n      selectedVillage,\n      person,\n      // house,\n      // visible,\n      visible1,\n      houseaddress,\n      haveLocation,\n      showDraggableMarker,\n      editeDraggableMarker,\n      villageDrag,\n      noDrag,\n      idhouse,\n      updatehouse,\n      dragMarkerLatlng,\n      draggable,\n      newid,\n      edithouse,\n      newlatlng,\n    } = this.state\n    const onsubmit = this.handleValidSubmit\n    // console.log(edithouse,'บ้าน');\n    console.log(updatehouse, 'havavava')\n    const aa12 = geojson.map(item => item.properties)\n    // const housenovillage = houseaddress.map(object => object.properties)\n    const position = [lat, lng]\n    console.log(geojson, 'mapapapapap')\n    console.log(selectedVillage, person)\n    console.log(houseaddress, editeDraggableMarker, 'themask')\n\n    function refreshPage() {\n      window.location.reload()\n    }\n\n    const Complete = () => {\n      return (\n        <AutoComplete\n          style={{ width: 350, Color: '#000' }}\n          onSelect={val => {\n            this.setState({ submit: val })\n          }}\n          dataSource={aa12.map(object => object.no + object.villageName)}\n          defaultValue={submit}\n          placeholder=\"บ้านเลขที่ / หมู่บ้าน\"\n          filterOption={(inputValue, option) =>\n            option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n        >\n          <Input\n            suffix={<Icon type=\"search\" onClick={refreshPage} className=\"certain-category-icon\" />}\n            allowClear\n          />\n        </AutoComplete>\n      )\n    }\n\n    // const Search = () => {\n    //   return (\n    //     <AutoComplete\n    //       style={{ width: 250, Color: '#000' }}\n    //       onChange={onsubmit}\n    //       dataSource={haveLocation.map(d => d.no + d.villageName)}\n    //       defaultValue={submit}\n    //       placeholder=\"บ้านเลขที่ / หมู่บ้าน\"\n    //       filterOption={(inputValue, option) =>\n    //         option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n    //       }\n    //     >\n    //       <Input\n    //         suffix={<Icon type=\"search\" onClick={refreshPage} className=\"certain-category-icon\" />}\n    //         allowClear\n    //       />\n    //     </AutoComplete>\n    //   )\n    // }\n\n    const content = haveLocation.map(d => {\n      return (\n        <Form layout=\"vertical\" onChange={onsubmit}>\n          <Row gutter={16}>\n            <Button\n              style={{ width: 260 }}\n              onClick={() => this.showDraggable(d)}\n              onChange={onsubmit}\n            >\n              {d.no}&nbsp;{d.villageName}\n            </Button>\n          </Row>\n        </Form>\n      )\n    })\n    if (error) {\n      return <div>Error: {error.message}</div>\n    }\n    if (!isLoaded) {\n      return <div>Loading...</div>\n    }\n    return (\n      <div>\n        <Helmet title=\"Dashboard: Crypto\" />\n        <div className=\"air__utils__heading\">\n          <h5>แก้ไข</h5>\n        </div>\n        <Complete />\n        <br />\n        <br />\n        <Map style={{ height: '70vh' }} center={position} zoom={14}>\n          <FullscreenControl position=\"topleft\" />\n          {this.renderBaseLayerControl()}\n          {editeDraggableMarker &&\n            geojson.map((item, id) => {\n              const markerdata = [item.geometry.coordinates[1], item.geometry.coordinates[0]]\n              let markerIcon1 = myIcon\n              if (submit) {\n                if (item.properties.no + item.properties.villageName === submit) {\n                  markerIcon1 = greenIcon\n                }\n              }\n              return (\n                <Marker\n                  key=\"draggable-marker\"\n                  marker_index={`draggable-marker ${id}`}\n                  draggable={draggable}\n                  onDragend={e => this.onDragle(e, item, id)}\n                  // ondragend={e => this.setState({ datalatlng : e })}\n                  position={markerdata}\n                  icon={markerIcon1}\n                >\n                  <Popup>\n                    <span>\n                      <p>หมู่บ้าน:{item.properties.villageName}</p>\n                      <p>บ้านเลขที่:{item.properties.no}</p>\n                      <p>\n                        {item.geometry.coordinates[1]},{item.geometry.coordinates[0]}\n                      </p>\n                    </span>\n                    {draggable === true && (\n                      <Row>\n                        <Button\n                          onClick={() =>\n                            this.editnewmarker(newid, geojson, edithouse, newlatlng, draggable)\n                          }\n                        >\n                          บันทึก\n                        </Button>\n                        &nbsp;\n                        <Button onClick={this.handleDelete}>ยกเลิก</Button>\n                      </Row>\n                    )}\n                  </Popup>\n                </Marker>\n              )\n            })}\n          {showDraggableMarker && (\n            <Marker\n              key=\"draggable-marker\"\n              marker_index=\"draggable-marker\"\n              style={{ position: 'absolute', zIndex: 4000 }}\n              position={dragMarkerLatlng}\n              draggable\n              onDragend={this.onDrag}\n              icon={greenIcon}\n              onChange={this.zoomIn}\n            >\n              <Popup>\n                <span>\n                  <p>หมู่บ้าน:{villageDrag}</p>\n                  <p>บ้านเลขที่:{noDrag}</p>\n                </span>\n                <Row>\n                  <Button onClick={() => this.submitok(idhouse, dragMarkerLatlng)}>บันทึก</Button>\n                  &nbsp;\n                  <Button onClick={this.handleRemove}>ยกเลิก</Button>\n                </Row>\n              </Popup>\n            </Marker>\n          )}\n          <Popover\n            // title={<Search />}\n            trigger=\"click\"\n            visible={visible1}\n            onVisibleChange={this.handleVisibleChange}\n            overlayStyle={{\n              height: '50vh',\n              overflowY: 'auto',\n            }}\n            content={content}\n          >\n            <Button\n              style={{\n                position: 'absolute',\n                marginTop: 280,\n                left: 10,\n                padding: 10,\n                width: 35,\n                zIndex: 400,\n              }}\n            >\n              <i className=\"icmn-plus\" />\n            </Button>\n          </Popover>\n          <Button\n            style={{\n              position: 'absolute',\n              marginTop: 240,\n              left: 10,\n              padding: 10,\n              width: 35,\n              zIndex: 400,\n            }}\n            onClick={this.editeDraggable}\n          >\n            <i className=\"fe fe-edit-3\" />\n          </Button>\n        </Map>\n        {/* <div className=\"row\">\n          <div className=\"card\">\n            <div className=\"col-xl-4 col-lg-12\">\n              <Button>เพิ่ม</Button>\n              <Button>แก้ไข</Button>\n            </div>\n          </div>\n          <div className=\"col-xl-8 col-lg-12\">\n            <Map style={{ height: '70vh' }} center={position} zoom={14}>\n              <FullscreenControl position=\"topleft\" />\n              {this.renderBaseLayerControl()}\n              {editeDraggableMarker && geojson.map((item,id) => {\n                const markerdata = [item.geometry.coordinates[1],item.geometry.coordinates[0]]\n                let markerIcon1 = myIcon\n                if (submit) {\n                  if (item.properties.no + item.properties.villageName === submit) {\n                    markerIcon1 = greenIcon\n                  }\n                }\n                  return (\n                    <Marker\n                      key=\"draggable-marker\"\n                      marker_index={`draggable-marker ${id}`}\n                      draggable={draggable}\n                      onDragend={(e)=>this.onDragle(e,item,id)}\n                      // ondragend={e => this.setState({ datalatlng : e })}\n                      position={markerdata}\n                      icon={markerIcon1}\n                    >\n                      <Popup>\n                        <span>\n                          <p>หมู่บ้าน:{item.properties.villageName}</p>\n                          <p>บ้านเลขที่:{item.properties.no}</p>\n                          <p>{item.geometry.coordinates[1]},{item.geometry.coordinates[0]}</p>\n                        </span>\n                        {draggable === true && (\n                          <Row>\n                            <Button onClick={() => this.editnewmarker(newid, geojson, edithouse,newlatlng, draggable)}>บันทึก</Button>\n                            &nbsp;\n                            <Button onClick={this.handleDelete}>ยกเลิก</Button>\n                          </Row>\n                        )}\n                      </Popup>\n                    </Marker>\n                  )\n                })}\n              {showDraggableMarker && (\n                <Marker\n                  key=\"draggable-marker\"\n                  marker_index=\"draggable-marker\"\n                  style={{ position: 'absolute', zIndex: 4000 }}\n                  position={dragMarkerLatlng}\n                  draggable\n                  onDragend={this.onDrag}\n                  icon={greenIcon}\n                  onChange={this.zoomIn}\n                >\n                  <Popup>\n                    <span>\n                      <p>หมู่บ้าน:{villageDrag}</p>\n                      <p>บ้านเลขที่:{noDrag}</p>\n                    </span>\n                    <Row>\n                      <Button onClick={() => this.submitok(idhouse, dragMarkerLatlng)}>บันทึก</Button>\n                      &nbsp;\n                      <Button onClick={this.handleRemove}>ยกเลิก</Button>\n                    </Row>\n                  </Popup>\n                </Marker>\n              )}\n              <Popover\n                // title={<Search />}\n                trigger=\"click\"\n                visible={visible1}\n                onVisibleChange={this.handleVisibleChange}\n                overlayStyle={{\n                  height: '50vh',\n                  overflowY: 'auto',\n                }}\n                content={content}\n              >\n                <Button\n                  style={{\n                    position: 'absolute',\n                    marginTop: 280,\n                    left: 10,\n                    padding: 10,\n                    width: 35,\n                    zIndex: 400,\n                  }}\n                >\n                  <i className=\"icmn-plus\" />\n                </Button>\n              </Popover>\n              <Button\n                style={{\n                  position: 'absolute',\n                  marginTop: 240,\n                  left: 10,\n                  padding: 10,\n                  width: 35,\n                  zIndex: 400,\n                }}\n                onClick={this.editeDraggable}\n              >\n                <i className=\"fe fe-edit-3\" />\n              </Button>\n            </Map>\n          </div>\n        </div> */}\n        <br />\n        <Footer />\n      </div>\n    )\n  }\n}\nexport default Editmark\n"],"sourceRoot":""}